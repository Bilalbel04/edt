Aquí tens uns apunts organitzats per estudiar el temari sobre sistemes gestors de bases de dades (SGBD), basats en les fonts proporcionades:

**Tema 1: Introducció als Sistemes Gestors de Bases de Dades**

*   **Definicions bàsiques**:
    *   **Dada:** Fets, esdeveniments o transaccions emmagatzemades.
    *   **Informació:** Dades processades i comunicades de manera entenedora.
    *   Registre
    *   Fitxer
    *   Base de dades
    *   Sistema gestor de base de dades
    *   Redundància
    *   Consistència
    *   Integritat
    *   Independència lògico-física de les dades

*   **Dades i Processament**:
    *   Les dades es processen per generar informació.
    *   `Dades -> Processament -> Informació`

*   **Inicis: Sistemes de Fitxers**:
    *   Els sistemes de fitxers van ser utilitzats per emmagatzemar, processar i actualitzar informació empresarial.

*   **Característiques dels Sistemes de Fitxers**:
    *   Informació replicada en diferents fitxers.
    *   Format d'emmagatzematge de dades variable en cada fitxer.
    *   Programes dependents de l'estructura física dels fitxers.
    *   Creació i modificació sense planificació global.
    *   Semblen simples de manejar a primera vista.

*   **Inconvenients dels Sistemes de Fitxers**:
    *   **Redundància:** Malbaratament d'espai de disc.
    *   **Integritat:** La integritat de les dades depèn dels programes.
    *   **Dependència:** Problemes d'integritat.
    *   **Consistència:** No es pot assegurar la consistència de les dades perquè no hi ha relacions definides.
    *   **Independència Lògica-Física:** No hi ha independència, i els programes s'han de modificar amb canvis en l'estructura física.
    *   **Dificultat en consultes específiques:** Cal programar cada consulta.
    *   **Reorganització:** Necessitat de reorganitzar l'emmagatzematge físic després de canvis.

*   **Sistema Gestor de Bases de Dades (SGBD)**:
    *   **Avantatges:**
        *   **Redundància:** Desaparició de la redundància.
        *   **Inconsistència:** Eliminació de la inconsistència.
        *   **Integritat:** Assegurament de la integritat de les dades.
        *   **Independència Lògica-Física:** Separació entre l'estructura i l'emmagatzematge de les dades.
        *   Emmagatzemament de restriccions (regles de validació) al diccionari de dades.
        *   Accés comú a la informació per a totes les dades.
        *   No cal programar les consultes.
    *   **Inconvenients**:
        *   **Cost:** Més cars en termes de maquinari i programari.
        *   **Complexitat:** Disseny més complicat que requereix especialistes i planificació costosa.
        *   **Planificació:** Necessitat de planificar còpies de seguretat per a la recuperació davant d'errors.

*   **Base de Dades (BD)**:
    *   Col·lecció de dades integrades, emmagatzemades en suport secundari (no volàtil) i sense redundància. Les dades han de ser compartides per diferents usuaris i aplicacions, i mantenir-se independents.

*   **Sistema Gestor de Base de Dades (SGBD)**:
    *   Eina informàtica amb programes, utilitats, procediments i llenguatges per descriure i manipular les dades emmagatzemades a la BD, garantint-ne la seguretat.
    *   **Funcions d'un SGBD**:
        *   **Definició de dades (DDL):** Definir les estructures necessàries (vistes, taules i índexs) per a la gestió de la BD.
        *   **Manipulació de dades:** Afegir, suprimir o modificar les dades de la BD.
        *   **Control de dades:** Definir la seguretat de la informació, els usuaris i les condicions d'accés (rols, privilegis, còpies de seguretat).

*   **Definició de Dades**:
    *   Permet descriure per a cada objecte:
        *   Estructura
        *   Interrelacions
        *   Validacions i regles d'integritat
        *   Característiques de tipus físic
    *   A 3 nivells:
        *   Extern
        *   Lògic global
        *   Intern

*   **Manipulació de Dades**:
    *   Permet:
        *   Afegir
        *   Suprimir
        *   Modificar
    *   Suposa:
        *   Definir un criteri de selecció
        *   Definir l'estructura/es externa/es a recuperar

*   **Control de Dades**:
    *   Interfícies per comunicar-se amb la BD.
    *   Procediments per a l'administrador (DBA) per a funcions de:
        *   Seguretat: Còpies de seguretat, reinicis, etc.
        *   Protecció: Davant accessos no desitjats.
    *   Funcions de servei:
        *   Estadístiques d'utilització.
        *   Carregar fitxers.
        *   Canviar capacitat dels fitxers.

*   **Tipus d'Usuaris d'una BD**:
    *   Usuaris Informàtics
    *   Dissenyadors (lògics i físics)
    *   Administradors
    *   Analistes i Programadors
    *   Usuaris Finals (habituals i esporàdics)

*   **Arquitectura ANSI/X3/SPARC**:
    *   Model de Referència amb tres punts de vista:
        *   Components d'un SGBD
        *   Funcions a especificar
        *   Especificació de les dades a descriure i manipular

*   **Independència Física i Lògica de les Dades**:
    *   Separació entre l'emmagatzematge i l'organització lògica de les dades.
    *   Independència entre emmagatzematge, estructura lògica i programes d'aplicació.

*   **Models de Dades i Esquema**:
    *   **Model de dades:** Eines per descriure la realitat, amb conceptes, regles i operacions per manipular les dades.
    *   **Esquema de dades:** Representacions de la realitat. La qualitat depèn del model de dades i l'experiència dels programadors.

*   **Models de Dades: Evolució**:
    *   Sistemes prerelacionals
    *   Model jeràrquic
    *   Model de xarxa
    *   Sistemes relacionals
    *   Model relacional
    *   Sistemes postrelacionals (lògic, orientat a objectes, documental, clau-valor, etc.)

*   **Model de Dades Jeràrquic**:
    *   Estructura de dades en arbre.
    *   Pot ser difícil de gestionar amb grans quantitats d'informació.
    *   Representa relacions jeràrquiques 1:N.
    *   Les relacions M:N requereixen redundància.
    *   Exemple de SGBD: IMS/VS (IBM, 1962).

*   **Model de Xarxa**:
    *   Evolució del model jeràrquic cap a estructura de graf.
    *   Representa relacions M:N.
    *   Problemes amb la pèrdua d'herència.
    *   Menys redundància que el model jeràrquic.
    *   Producte comercial: IDMS (Computer Associates, 1971).

*   **Model Lògic Relacional**:
    *   Codd (1970).
    *   Estructura basada en relacions (taules).
    *   Col·lecció de relacions sense ordre.
    *   Cada relació s'associa a una entitat i té atributs.
    *   Cada realització és una tupla (ocurrència).
    *   No es permeten tuples duplicades.
    *   Cada atribut té un domini que defineix el rang de valors.

*   **Model Relacional**:
    *   Els dominis defineixen restriccions sobre els atributs.
    *   Manipulació de dades mitjançant llenguatges d'especificació (SQL), on l'usuari indica què vol sense especificar com obtenir-ho.
    *   Productes comercials:
        *   INGRES ('70)
        *   ORACLE (1979)
        *   PostgreSQL (1996)

Aquests apunts resumeixen els conceptes clau, avantatges i desavantatges de cada sistema, així com la seva evolució històrica.
